{
  "model": {
    "shape": "(1,5)",
    "bounds": "[(0.6,0.6799), (-0.5,0.5), (-0.5,0.5), (0.45,0.5), (-0.5,-0.45)]",
    "layers": [
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w1.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b1.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w2.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b2.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w3.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b3.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w4.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b4.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w5.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b5.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w6.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b6.txt",
        "func": "relu"
      },
      {
        "type": "linear",
        "weights": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/weights/w7.txt",
        "bias": "/Users/smu/Workspace/Code/nsolver/benchmark/reluplex/nnet/nnet_2_1/bias/b7.txt",
        "func": "softmax"
      }
    ]
  },
  "assert": "(FA x . TRUE => arg_max(x) != 0)",
  "solver": {
    "name": "optimize"
  }
}
